{
    "uid": "5C3FD5D2K8F24A44DBSA592E58D90CF041B0",
    "isLoaded": true,
    "lastModificationTime": 0,
    "items": {
        "name": "Easings",
        "type": "game_script",
        "order": 5,
        "parentId": "C2F9A7C9K48FFA4390S9F39E2E3A8A1D7221",
        "folder": false,
        "content": "# ===================================================================\n#\n#   Script: Easings\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\n\n###*\n* Holds different easing types and helper methods.\n*\n* @module gs\n* @class Easings\n* @memberof gs\n* @constructor\n###  \nclass Easings\n    @initialize: ->\n        ###*\n        * Contains all easing functions by type and in/out.\n        * @property EASE_FUNCTIONS\n        * @type Function[][]\n        * @static\n        * @final\n        ###\n        @EASE_FUNCTIONS = [[Math.linearTween, Math.linearTween, Math.linearTween], \n                     [Math.easeOutQuad, Math.easeInQuad, Math.easeInOutQuad], \n                     [Math.easeOutCubic, Math.easeInCubic, Math.easeInOutCubic], \n                     [Math.easeOutQuart, Math.easeInQuart, Math.easeInOutQuart],\n                     [Math.easeOutQuint, Math.easeInQuint, Math.easeInOutQuint],\n                     [Math.easeOutSine, Math.easeInSine, Math.easeInOutSine],\n                     [Math.easeOutExpo, Math.easeInExpo, Math.easeInOutExpo],\n                     [Math.easeOutCirc, Math.easeInCirc, Math.easeInOutCirc],\n                     [Math.easeOutElastic, Math.easeInElastic, Math.easeInOutElastic],\n                     [Math.easeOutBounce, Math.easeInBounce, Math.easeInOutBounce],\n                     [Math.easeOutBack, Math.easeInBack, Math.easeInOutBack]]\n        \n        ###*\n        * @property BY_INDEX\n        * @type number[][]\n        * @static\n        * @final\n        ###             \n        @BY_INDEX = [[[0, 0], [0, 0], [0, 0]], \n                     [[1, 0], [1, 1], [1, 2]],\n                     [[2, 0], [2, 1], [2, 2]],\n                     [[3, 0], [3, 1], [3, 2]],\n                     [[4, 0], [4, 1], [4, 2]],\n                     [[5, 0], [5, 1], [5, 2]],\n                     [[6, 0], [6, 1], [6, 2]],\n                     [[7, 0], [7, 1], [7, 2]],\n                     [[8, 0], [8, 1], [8, 2]],\n                     [[9, 0], [9, 1], [9, 2]],\n                     [[10, 0], [10, 1], [10, 2]]]\n         \n        ###*\n        * @property BY_STRING\n        * @type Object\n        * @static\n        * @final\n        ###               \n        @BY_STRING = {\n            \"linear_in\": [0, 0], \"linear_out\": [0, 0], \"linear_inout\": [0, 0],\n            \"quad_out\": [1, 0], \"quad_in\": [1, 1], \"quad_inout\": [1, 2],\n            \"cubic_out\": [2, 0], \"cubic_in\": [2, 1], \"cubic_inout\": [2, 2],\n            \"quart_out\": [3, 0], \"quart_in\": [3, 1], \"quart_inout\": [3, 2],\n            \"quint_out\": [4, 0], \"quint_in\": [4, 1], \"quint_inout\": [4, 2],\n            \"sine_out\": [5, 0], \"sine_in\": [5, 1], \"sine_inout\": [5, 2],\n            \"expo_out\": [6, 0], \"expo_in\": [6, 1], \"expo_inout\": [6, 2],\n            \"circ_out\": [7, 0], \"circ_in\": [7, 1], \"circ_inout\": [7, 2],\n            \"elastic_out\": [8, 0], \"elastic_in\": [8, 1], \"elastic_inout\": [8, 2],\n            \"bounce_out\": [9, 0], \"bounce_in\": [9, 1], \"bounce_inout\": [9, 2],\n            \"back_out\": [10, 0], \"back_in\": [10, 1], \"back_inout\": [10, 2]\n        }\n        \n        ###*\n        * @property EASE_LINEAR\n        * @type number[][]\n        * @static\n        * @final\n        ###  \n        @EASE_LINEAR = @BY_INDEX[gs.EasingTypes.EASE_LINEAR]\n        \n        ###*\n        * @property EASE_QUADRATIC\n        * @type number[][]\n        * @static\n        * @final\n        ###  \n        @EASE_QUADRATIC = @BY_INDEX[gs.EasingTypes.EASE_QUADRATIC]\n        ###*\n        * @property EASE_CUBIC\n        * @type number[][]\n        * @static\n        * @final\n        ###  \n        @EASE_CUBIC = @BY_INDEX[gs.EasingTypes.EASE_CUBIC]\n        ###*\n        * @property EASE_QUARTIC\n        * @type number[][]\n        * @static\n        * @final\n        ###  \n        @EASE_QUARTIC = @BY_INDEX[gs.EasingTypes.EASE_QUARTIC]\n        ###*\n        * @property EASE_QUINTIC\n        * @type number[][]\n        * @static\n        * @final\n        ###  \n        @EASE_QUINTIC = @BY_INDEX[gs.EasingTypes.EASE_QUINTIC]\n        ###*\n        * @property EASE_SINUSOIDAL\n        * @type number[][]\n        * @static\n        * @final\n        ###  \n        @EASE_SINUSOIDAL = @BY_INDEX[gs.EasingTypes.EASE_SINUSOIDAL]\n        ###*\n        * @property EASE_EXPONENTIAL\n        * @type number[][]\n        * @static\n        * @final\n        ###  \n        @EASE_EXPONENTIAL = @BY_INDEX[gs.EasingTypes.EASE_EXPONENTIAL]\n        ###*\n        * @property EASE_CIRCULAR\n        * @type number[][]\n        * @static\n        * @final\n        ###  \n        @EASE_CIRCULAR = @BY_INDEX[gs.EasingTypes.EASE_CIRCULAR]\n        ###*\n        * @property EASE_ELASTIC\n        * @type number[][]\n        * @static\n        * @final\n        ###  \n        @EASE_ELASTIC = @BY_INDEX[gs.EasingTypes.EASE_ELASTIC]\n        ###*\n        * @property EASE_BOUNCE\n        * @type number[][]\n        * @static\n        * @final\n        ###  \n        @EASE_BOUNCE = @BY_INDEX[gs.EasingTypes.EASE_BOUNCE]\n        ###*\n        * @property EASE_BACK\n        * @type number[][]\n        * @static\n        * @final\n        ###  \n        @EASE_BACK = @BY_INDEX[gs.EasingTypes.EASE_BACK]\n    \n    ###*\n    * @method fromValues\n    * @param {number} index - The index.\n    * @param {number} inOut - The in-out value.\n    ###\n    @fromValues: (index, inOut) -> gs.Easings.BY_INDEX[index][inOut]\n    \n    ###*\n    * @method fromObject\n    * @param {Object} obj - The easing data-object.\n    ###\n    @fromObject: (obj, flags, defaults) -> gs.Easings.BY_INDEX[obj.type][obj.inOut]\n    \n    ###*\n    * @method fromString\n    * @param {String} s - The easing string like \"quad_in\" for example.\n    ###\n    @fromString: (s) -> gs.Easings.BY_STRING[s || \"linear_inout\"]\n    \nEasings.initialize()\ngs.Easings = Easings",
        "compiledContent": "// Generated by CoffeeScript 1.12.7\n\n/**\n* Holds different easing types and helper methods.\n*\n* @module gs\n* @class Easings\n* @memberof gs\n* @constructor\n */\n\n(function() {\n  var Easings;\n\n  Easings = (function() {\n    function Easings() {}\n\n    Easings.initialize = function() {\n\n      /**\n      * Contains all easing functions by type and in/out.\n      * @property EASE_FUNCTIONS\n      * @type Function[][]\n      * @static\n      * @final\n       */\n      this.EASE_FUNCTIONS = [[Math.linearTween, Math.linearTween, Math.linearTween], [Math.easeOutQuad, Math.easeInQuad, Math.easeInOutQuad], [Math.easeOutCubic, Math.easeInCubic, Math.easeInOutCubic], [Math.easeOutQuart, Math.easeInQuart, Math.easeInOutQuart], [Math.easeOutQuint, Math.easeInQuint, Math.easeInOutQuint], [Math.easeOutSine, Math.easeInSine, Math.easeInOutSine], [Math.easeOutExpo, Math.easeInExpo, Math.easeInOutExpo], [Math.easeOutCirc, Math.easeInCirc, Math.easeInOutCirc], [Math.easeOutElastic, Math.easeInElastic, Math.easeInOutElastic], [Math.easeOutBounce, Math.easeInBounce, Math.easeInOutBounce], [Math.easeOutBack, Math.easeInBack, Math.easeInOutBack]];\n\n      /**\n      * @property BY_INDEX\n      * @type number[][]\n      * @static\n      * @final\n       */\n      this.BY_INDEX = [[[0, 0], [0, 0], [0, 0]], [[1, 0], [1, 1], [1, 2]], [[2, 0], [2, 1], [2, 2]], [[3, 0], [3, 1], [3, 2]], [[4, 0], [4, 1], [4, 2]], [[5, 0], [5, 1], [5, 2]], [[6, 0], [6, 1], [6, 2]], [[7, 0], [7, 1], [7, 2]], [[8, 0], [8, 1], [8, 2]], [[9, 0], [9, 1], [9, 2]], [[10, 0], [10, 1], [10, 2]]];\n\n      /**\n      * @property BY_STRING\n      * @type Object\n      * @static\n      * @final\n       */\n      this.BY_STRING = {\n        \"linear_in\": [0, 0],\n        \"linear_out\": [0, 0],\n        \"linear_inout\": [0, 0],\n        \"quad_out\": [1, 0],\n        \"quad_in\": [1, 1],\n        \"quad_inout\": [1, 2],\n        \"cubic_out\": [2, 0],\n        \"cubic_in\": [2, 1],\n        \"cubic_inout\": [2, 2],\n        \"quart_out\": [3, 0],\n        \"quart_in\": [3, 1],\n        \"quart_inout\": [3, 2],\n        \"quint_out\": [4, 0],\n        \"quint_in\": [4, 1],\n        \"quint_inout\": [4, 2],\n        \"sine_out\": [5, 0],\n        \"sine_in\": [5, 1],\n        \"sine_inout\": [5, 2],\n        \"expo_out\": [6, 0],\n        \"expo_in\": [6, 1],\n        \"expo_inout\": [6, 2],\n        \"circ_out\": [7, 0],\n        \"circ_in\": [7, 1],\n        \"circ_inout\": [7, 2],\n        \"elastic_out\": [8, 0],\n        \"elastic_in\": [8, 1],\n        \"elastic_inout\": [8, 2],\n        \"bounce_out\": [9, 0],\n        \"bounce_in\": [9, 1],\n        \"bounce_inout\": [9, 2],\n        \"back_out\": [10, 0],\n        \"back_in\": [10, 1],\n        \"back_inout\": [10, 2]\n      };\n\n      /**\n      * @property EASE_LINEAR\n      * @type number[][]\n      * @static\n      * @final\n       */\n      this.EASE_LINEAR = this.BY_INDEX[gs.EasingTypes.EASE_LINEAR];\n\n      /**\n      * @property EASE_QUADRATIC\n      * @type number[][]\n      * @static\n      * @final\n       */\n      this.EASE_QUADRATIC = this.BY_INDEX[gs.EasingTypes.EASE_QUADRATIC];\n\n      /**\n      * @property EASE_CUBIC\n      * @type number[][]\n      * @static\n      * @final\n       */\n      this.EASE_CUBIC = this.BY_INDEX[gs.EasingTypes.EASE_CUBIC];\n\n      /**\n      * @property EASE_QUARTIC\n      * @type number[][]\n      * @static\n      * @final\n       */\n      this.EASE_QUARTIC = this.BY_INDEX[gs.EasingTypes.EASE_QUARTIC];\n\n      /**\n      * @property EASE_QUINTIC\n      * @type number[][]\n      * @static\n      * @final\n       */\n      this.EASE_QUINTIC = this.BY_INDEX[gs.EasingTypes.EASE_QUINTIC];\n\n      /**\n      * @property EASE_SINUSOIDAL\n      * @type number[][]\n      * @static\n      * @final\n       */\n      this.EASE_SINUSOIDAL = this.BY_INDEX[gs.EasingTypes.EASE_SINUSOIDAL];\n\n      /**\n      * @property EASE_EXPONENTIAL\n      * @type number[][]\n      * @static\n      * @final\n       */\n      this.EASE_EXPONENTIAL = this.BY_INDEX[gs.EasingTypes.EASE_EXPONENTIAL];\n\n      /**\n      * @property EASE_CIRCULAR\n      * @type number[][]\n      * @static\n      * @final\n       */\n      this.EASE_CIRCULAR = this.BY_INDEX[gs.EasingTypes.EASE_CIRCULAR];\n\n      /**\n      * @property EASE_ELASTIC\n      * @type number[][]\n      * @static\n      * @final\n       */\n      this.EASE_ELASTIC = this.BY_INDEX[gs.EasingTypes.EASE_ELASTIC];\n\n      /**\n      * @property EASE_BOUNCE\n      * @type number[][]\n      * @static\n      * @final\n       */\n      this.EASE_BOUNCE = this.BY_INDEX[gs.EasingTypes.EASE_BOUNCE];\n\n      /**\n      * @property EASE_BACK\n      * @type number[][]\n      * @static\n      * @final\n       */\n      return this.EASE_BACK = this.BY_INDEX[gs.EasingTypes.EASE_BACK];\n    };\n\n\n    /**\n    * @method fromValues\n    * @param {number} index - The index.\n    * @param {number} inOut - The in-out value.\n     */\n\n    Easings.fromValues = function(index, inOut) {\n      return gs.Easings.BY_INDEX[index][inOut];\n    };\n\n\n    /**\n    * @method fromObject\n    * @param {Object} obj - The easing data-object.\n     */\n\n    Easings.fromObject = function(obj, flags, defaults) {\n      return gs.Easings.BY_INDEX[obj.type][obj.inOut];\n    };\n\n\n    /**\n    * @method fromString\n    * @param {String} s - The easing string like \"quad_in\" for example.\n     */\n\n    Easings.fromString = function(s) {\n      return gs.Easings.BY_STRING[s || \"linear_inout\"];\n    };\n\n    return Easings;\n\n  })();\n\n  Easings.initialize();\n\n  gs.Easings = Easings;\n\n}).call(this);\n"
    },
    "summary": [
        "name",
        "type"
    ],
    "externalItems": []
}