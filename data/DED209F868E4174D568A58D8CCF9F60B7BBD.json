{
    "uid": "DED209F868E4174D568A58D8CCF9F60B7BBD",
    "isLoaded": true,
    "lastModificationTime": null,
    "items": {
        "name": "InterpreterContext",
        "type": "game_script",
        "order": 3,
        "parentId": "7ACD60D1033E294CE98A475612A690730E28",
        "folder": false,
        "scriptType": 0,
        "content": "# ===================================================================\n#\n#   Script: InterpreterContext\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\nclass InterpreterContext\n    @objectCodecBlackList = [\"owner\"]\n    \n    ###*\n    * Describes an interpreter-context which holds information about\n    * the interpreter's owner and also unique ID used for accessing correct\n    * local variables.\n    *\n    * @module gs\n    * @class InterpreterContext\n    * @memberof gs\n    * @param {number|string} id - A unique ID\n    * @param {Object} owner - The owner of the interpreter\n    ###\n    constructor: (id, owner) ->\n        ###*\n        * A unique numeric or textual ID used for accessing correct local variables.\n        * @property id\n        * @type number|string\n        ###\n        @id = id\n\n        ###*\n        * The owner of the interpreter (e.g. current scene, etc.).\n        * @property owner\n        * @type Object\n        ###\n        @owner = owner\n\n    ###*\n    * Sets the context's data.\n    * @param {number|string} id - A unique ID\n    * @param {Object} owner - The owner of the interpreter\n    * @method set\n    ###\n    set: (id, owner) ->\n        @id = id\n        @owner = owner\n\ngs.InterpreterContext = InterpreterContext",
        "compiledContent": "// Generated by CoffeeScript 1.12.7\n(function() {\n  var InterpreterContext;\n\n  InterpreterContext = (function() {\n    InterpreterContext.objectCodecBlackList = [\"owner\"];\n\n\n    /**\n    * Describes an interpreter-context which holds information about\n    * the interpreter's owner and also unique ID used for accessing correct\n    * local variables.\n    *\n    * @module gs\n    * @class InterpreterContext\n    * @memberof gs\n    * @param {number|string} id - A unique ID\n    * @param {Object} owner - The owner of the interpreter\n     */\n\n    function InterpreterContext(id, owner) {\n\n      /**\n      * A unique numeric or textual ID used for accessing correct local variables.\n      * @property id\n      * @type number|string\n       */\n      this.id = id;\n\n      /**\n      * The owner of the interpreter (e.g. current scene, etc.).\n      * @property owner\n      * @type Object\n       */\n      this.owner = owner;\n    }\n\n\n    /**\n    * Sets the context's data.\n    * @param {number|string} id - A unique ID\n    * @param {Object} owner - The owner of the interpreter\n    * @method set\n     */\n\n    InterpreterContext.prototype.set = function(id, owner) {\n      this.id = id;\n      return this.owner = owner;\n    };\n\n    return InterpreterContext;\n\n  })();\n\n  gs.InterpreterContext = InterpreterContext;\n\n}).call(this);\n"
    },
    "summary": [
        "name",
        "type"
    ],
    "externalItems": []
}