{
    "uid": "35914DF9K48D0A4F55S8390EAFAADC6607BD",
    "isLoaded": true,
    "lastModificationTime": 1428167836356,
    "items": {
        "name": "Common Controls",
        "type": "script",
        "parentId": "DB2D3154KEE4EA43BCSBC59ED3B462A07998",
        "order": 2,
        "content": "/* ===================================================================
 *
 *   Script: Common Controls
 *
 *   $$COPYRIGHT$$
 *
 * ===================================================================
 *
 *   Defines helpers to use scene command definition to create common controls
 *   more easy.
 *
 * ===================================================================
 */
 
if(!global.GS) global.GS = {};
if(!global.GSO) global.GSO = { HELPERS: {} };
if(!global.GSQ) global.GSQ = { CONTROLS: {}, ROWS: {} };

GSQ.CONTROLS.CREATE_PREDEFINED_OBJECT_POSITION = function(label, allowDefaultSelection) {
    return {
        "label": label || "",                  
        "valueFormula": "return GS.VN.textForPredefinedObjectPosition(p.predefinedPositionId);",
        "type": "GSQPopupField",
        "dataSource": {
            "sourceFormula": "return GS.VN.predefinedObjectPositionList("+allowDefaultSelection+")"
        },
        "attribute": "predefinedPositionId"
    }
}

GSQ.CONTROLS.CREATE_PICTURE_RESOURCE_SELECTION = function(label, attribute) {
    return {
        "label": label,
        "valueFormula": "return fmtResource(p."+attribute+");",
        "attribute": attribute,
        "identifier": attribute,
        "type": "GSQPopupField",
        "dataAttribute": "resource",
        "dialog": { "uid": "dialog.selectGraphicResource", "parameters": { "folder": "Graphics/Pictures" } }
    }
}

GSQ.CONTROLS.CREATE_SYSTEM_COLOR = function(index) {
    return {
        "label": "$$:lcs('26718EC92FCFB84DA8881166D557A816E1B2').replace('%s', "+(index+1)+")",
        "lockable": true,
        "valueFormula": "var color = p.colors["+index+"]; return color ?  color.red + ', ' + color.green + ', ' + color.blue + ', '+color.alpha : 'None'; ",
        "attribute": "colors."+index,
        "type": "GSQPopupField",
        "dataAttribute": "color",
        "dialog": { "uid": "07DDB0112342C01F", "parameters": { }}
    }
}

GSQ.CONTROLS.CREATE_SYSTEM_SOUND = function(index) {
    return {
        "label": "$$:lcs('D1FFAC39529CA742C208064749961529A468').replace('%s',"+(index+1)+")",
        "lockable": true,
        "valueFormula": "return fmtResource(p.sounds[" + index + "]);",
        "variableButton": { "dataSource": "strings" },
        "attribute": "sounds."+index,
        "type": "GSQPopupField",
        "dialog": { "uid": "dialog.selectAudioResource", "parameters": { "folder": "Audio/Sounds" } },
        "icon": { "name": "listen-01" }
    }
}

GSQ.CONTROLS.CREATE_GRAPHIC_ORIGIN = function(lockable) {
    return Object.override(GSQ.CONTROLS.GRAPHIC_ORIGIN, { "lockable": lockable })
}

GSQ.CONTROLS.CREATE_VARIABLE_VALUE_TYPE = function(attribute, label)
{
    return {
        "label": label,
        "valueFormula": `return GS.CONST.LIST_VARIABLE_VALUE_TYPES[p.${attribute}]`,
        "attribute": attribute,
        "identifier": attribute,
        "type": "GSQPopupField",
        "dataSource": GS.CONST.LIST_VARIABLE_VALUE_TYPES,
        "showItems": [["numberValue"], ["switchValue"], ["stringValue"], ["listValue"]]
    }
}

GSO.HELPERS.TIME_VALUE_TRANSLATOR = function()
{
    return {
      "write": "return (v||0) / 1000 * GS.CONST.GAME_FRAME_RATE",
      "read": "return ROUND((v||0) / GS.CONST.GAME_FRAME_RATE * 1000)"
    }
}

GSQ.CONTROLS.CHECK_BOX = function(label, attribute, enableItems, lockable) {
    return {
        "label": label,
        "type": "GSQCheckBox",
        "lockable": lockable,
        "attribute": attribute,
        "identifier": attribute,
        "enableItems": enableItems,
        "valueFormula": "return GS.CONST.YES_NO[p." + attribute + "]"
    }
}

GSQ.CONTROLS.CREATE_FADE_IN_MS = function(label, attribute) {
    return {
        "label": label,
        "lockable": true,
        "valueFormula": "return (p."+(attribute)+"||0)+'ms'",
        "attribute": attribute,
        "minimum": 0,
        "maximum": GS.CONST.MAX_NUMBER_VALUE,
        "type": "GSQStepper"
    }
}

GSQ.CONTROLS.VARIABLE_SELECTION = function(label, attribute, dataSource) {
    return {
        "label": label,
        "type": "GSQPopupField",
        "dialog": { "uid": "dialog.selectVariable", "parameters": { "dataSource": dataSource } }, 
        "attribute": attribute,
        "valueFormula": "return fmtVar(p." + attribute + ", '" + dataSource + "')"
    }
}

GSQ.CONTROLS.AUDIO_FADE_OUT = {
    "label": "$$C391D8A187BE754D3C48CC54E73980E75EB9",
    "lockable": true,
    "valueFormula": "return fmtDuration(p.fadeOutDuration)",
    "valueTranslator": {
      "write": "return v / 1000 * GS.CONST.GAME_FRAME_RATE",
      "read": "return ROUND(v / GS.CONST.GAME_FRAME_RATE * 1000)"
    },
    "attribute": "fadeOutDuration",
    "minimum": 0,
    "maximum": GS.CONST.MAX_NUMBER_VALUE,
    "type": "GSQStepper"
}

GSQ.CONTROLS.AUDIO_FADE_IN = {
    "label": "$$C391D8A187BE754D3C48CC54E73980E75EB9",
    "lockable": true,
    "valueFormula": "return fmtDuration(p.fadeInDuration)",
    "valueTranslator": {
      "write": "return v / 1000 * GS.CONST.GAME_FRAME_RATE",
      "read": "return ROUND(v / GS.CONST.GAME_FRAME_RATE * 1000)"
    },
    "attribute": "fadeInDuration",
    "minimum": 0,
    "maximum": GS.CONST.MAX_NUMBER_VALUE,
    "type": "GSQStepper"
}

GSQ.CONTROLS.TIME_VALUE = function(label, attribute, lockable) {
    return {
        "label": label,
        "valueFormula": "return fmtDuration(fmtNumVar(p." + attribute + "))",
        "valueTranslator": {
          "write": "return v / 1000 * GS.CONST.GAME_FRAME_RATE",
          "read": "return ROUND(v / GS.CONST.GAME_FRAME_RATE * 1000)"
        },
        "type": "GSQStepper",
        "attribute": attribute,
        "identifier": attribute,
        "lockable": lockable || false,
        "variableButton": { "dataSource": "numbers" },
        "minimum": 0,
        "maximum": GS.CONST.MAX_NUMBER_VALUE
    }
}
GSQ.CONTROLS.DURATION = {
    "label": "$$0BD2456DK1DA1A4C2DS9C03EAC7A2C6C7815",
    "valueFormula": "return fmtDuration(fmtNumVar(p.duration))",
    "valueTranslator": {
      "write": "return v / 1000 * GS.CONST.GAME_FRAME_RATE",
      "read": "return ROUND(v / GS.CONST.GAME_FRAME_RATE * 1000)"
    },
    "type": "GSQStepper",
    "attribute": "duration",
    "identifier": "duration",
    "variableButton": { "dataSource": "numbers" },
    "minimum": 0,
    "maximum": GS.CONST.MAX_NUMBER_VALUE
};

GSQ.CONTROLS.WAIT_FOR_COMPLETION = {
    "type": "GSQPopupField",
    "attribute": "waitForCompletion",
    "identifier": "waitForCompletion",
    "dataSource": ["$$2EA7A7BF12D3404F62094CA6644784A9FC40", "$$97A5E676K2351A43FCSB0DFEBB5CF7A73243"],
    "valueFormula": "return (p.waitForCompletion ? lcs('97A5E676K2351A43FCSB0DFEBB5CF7A73243') : lcs('2EA7A7BF12D3404F62094CA6644784A9FC40'))"
};

GSQ.CONTROLS.OBJECT_DOMAIN_SELECTION = {
    "type": "GSQTextArea",
    "label": "$$9AF5EB1036128446C29B9F30DF6BFC248B2F",
    "multiline": false,
    "attribute": "domain",
    "valueFormula": "return p.domain || lcs('P113')"
}

GSQ.CONTROLS.CHARACTER_SELECTION = {
    "label": "$$1CCE5315K1F61A4059SBC64E0B6CECA383C3",
    "valueFormula": "return fmtRecord('characters', p.characterId)",
    "attribute": "characterId",
    "identifier": "character",
    "variableButton": { "dataSource": "strings" },
    "type": "GSQDataRecordField",
    "dataSource": "characters"
}

GSQ.CONTROLS.COMMON_EVENT_SELECTION = {
    "label": "",
    "valueFormula": "return fmtRecord('commonEvents', p.commonEventId)",
    "attribute": "commonEventId",
    "identifier": "commonEvent",
    "type": "GSQDataRecordField",
    "dataSource": "commonEvents",
    "variableButton": { "dataSource": "strings" }
}

GSQ.CONTROLS.GRAPHIC_PATH_SELECTION = {
    "label": "$$66679F92339DD144E21BBAF584980BF8105A",
    "valueFormula": "return p.path.data.length > 0 ? p.path.data.length + ' ' + lcs('505531C2919DF248B058F6C4664249FF5608') : lcs('D7DC911DKCCB9A4DE9SBE26EBFCCA4CB0826')",
    "type": "GSQPopupField",
    "attribute": "path",
    "identifier": "path",
    "dialog": { "uid": "3BFBF9E4KD37BA4393S8307E28A355F0A633" }
}

GSQ.CONTROLS.GRAPHIC_PATH_LOOP_TYPE = {
    "label": "$$ED7B5BF9KDE84A4CE8S9308E872A21F2D766",
    "valueFormula": "return GS.CONST.PATH_LOOP_TYPES[p.loopType]",
    "type": "GSQPopupField",
    "attribute": "loopType",
    "identifier": "loopType",
    "dataSource": GS.CONST.PATH_LOOP_TYPES
}

GSQ.CONTROLS.GRAPHIC_ORIGIN = {
    "label": "$$376D9476064BA24775187795894CD3009687",
    "type": "GSQPopupField",
    "valueFormula": "return p.origin == 0 ? lcs('P29') : lcs('P30')",
    "attribute": "origin",
    "dataSource": ["$$P29", "$$P30"]
}

GSQ.CONTROLS.GRAPHIC_POSITION_ORIGIN = {
    "label": "$$AD4572E7600DE6411B681756AEA87A33C9A4",
    "type": "GSQPopupField",
    "valueFormula": "return GS.CONST.GRAPHIC_ANCHOR_POINTS[p.positionOrigin]",
    "attribute": "positionOrigin",
    "dataSource": GS.CONST.GRAPHIC_ANCHOR_POINTS
}

GSQ.CONTROLS.GRAPHIC_Z_ORDER = {
    "label": "$$A4972EEB1026104D6B2BC9F4B0493B3D8B5F",
    "type": "GSQStepper",
    "attribute": "zOrder",
    "minimum": -GS.CONST.MAX_NUMBER_VALUE,
    "maximum": GS.CONST.MAX_NUMBER_VALUE,
    "variableButton": { "dataSource": "numbers" },
    "defaultValue": 0
}

GSQ.CONTROLS.GRAPHIC_BLEND_MODE = {
    "label": "$$6E6A55971BE4664E2D89AC97DED89BC4DF08",
    "type": "GSQPopupField",
    "attribute": "blendMode",
    "dataSource": GS.CONST.BLEND_MODES,
    "valueFormula": "return GS.CONST.BLEND_MODES[p.blendMode]",
    "variableButton": { "dataSource": "numbers" },
    "defaultValue": 0
}

GSQ.CONTROLS.PICTURE_SELECTION = {
    "label": "$$CF75C133601AC74067481B8776578046C7EF",
    "valueFormula": "return fmtResource(p.graphic);",
    "attribute": "graphic",
    "identifier": "graphic",
    "variableButton": { "dataSource": "strings" },
    "type": "GSQPopupField",
    "dataAttribute": "resource",
    "dialog": { "uid": "dialog.selectGraphicResource", "parameters": { "folder": "Graphics/Pictures" }}
}

GSQ.CONTROLS.IMAGE_SELECTION = function(label, attribute, folder) {
    return {
        "label": label,
        "valueFormula": "return fmtResource(p."+attribute+");",
        "attribute": attribute,
        "identifier": attribute,
        "variableButton": { "dataSource": "strings" },
        "type": "GSQPopupField",
        "dataAttribute": "resource",
        "dialog": { "uid": "dialog.selectGraphicResource", "parameters": { "folder": folder || "Graphics/Pictures" }}
    }
}

GSQ.CONTROLS.VOICE_SELECTION = {
    "label": "$$9A11A7A89FAF6747576B3C910EA4ECD5EBC7",
    "valueFormula": "return fmtResource(p.voice);",
    "variableButton": { "dataSource": "strings" },
    "attribute": "voice",
    "type": "GSQPopupField",
    "dialog": { "uid": "dialog.selectAudioResource", "parameters": { "folder": "Audio/Sounds" } },
    "icon": { "name": "listen-01" }
}

GSQ.CONTROLS.GRAPHIC_POSITION_TYPE = {
    "label": "$$P31",
    "type": "GSQPopupField",
    "valueFormula": "return GS.CONST.GRAPHIC_POSITION_TYPES[p.positionType]",
    "attribute": "positionType",
    "dataSource": GS.CONST.GRAPHIC_POSITION_TYPES,
    "showItems": [["predefinedPositionId"], ["position"], ["x", "y"]]
}

GSQ.CONTROLS.TEXT_POSITION_TYPE = {
    "label": "$$P31",
    "type": "GSQPopupField",
    "valueFormula": "return GS.CONST.TEXT_POSITION_TYPES[p.positionType]",
    "attribute": "positionType",
    "dataSource": GS.CONST.TEXT_POSITION_TYPES,
    "showItems": [["predefinedPositionId"], ["x", "y"]]
}
GSQ.CONTROLS.BACKGROUND_POSITION_TYPE = GSQ.CONTROLS.TEXT_POSITION_TYPE
GSQ.CONTROLS.GRAPHIC_POSITION_X = {
    "label": "X",
    "variableButton": { "dataSource": "numbers" },
    "type": "GSQStepper",
    "identifier": "x",
    "attribute": "position.x",
    "minimum": -GS.CONST.MAX_NUMBER_VALUE,
    "maximum": GS.CONST.MAX_NUMBER_VALUE
}

GSQ.CONTROLS.GRAPHIC_POSITION_Y = {
    "label": "Y",
    "variableButton": { "dataSource": "numbers" },
    "type": "GSQStepper",
    "identifier": "y",
    "attribute": "position.y",
    "minimum": -GS.CONST.MAX_NUMBER_VALUE,
    "maximum": GS.CONST.MAX_NUMBER_VALUE
}

GSQ.CONTROLS.GRAPHIC_OPACITY = {
    "label": "$$P176",
    "valueFormula": "return fmtNumVar(p.opacity);",
    "variableButton": { "dataSource": "numbers" },
    "type": "GSQStepper",
    "attribute": "opacity",
    "minimum": 0,
    "maximum": 255
}

GSQ.CONTROLS.GRAPHIC_ZOOM_X = {
    "label": "$$F566735230CD0440CA7BBC89B1EF3C783939",
    "valueFormula": "return fmtNumVar(p.zooming.x) + '%';",
    "variableButton": { "dataSource": "numbers" },
    "type": "GSQStepper",
    "attribute": "zooming.x",
    "minimum": 0,
    "maximum": 1000
},
GSQ.CONTROLS.GRAPHIC_ZOOM_Y = {
    "label": "$$B6E9AFBC24F70744F83BC5432458C25DCB2C",
    "valueFormula": "return fmtNumVar(p.zooming.y) + '%';",
    "type": "GSQStepper",
    "variableButton": { "dataSource": "numbers" },
    "attribute": "zooming.y",
    "minimum": 0,
    "maximum": 1000
}
GSQ.CONTROLS.GRAPHIC_OBJECT_NUMBER = {
    "label": "$$C287D490K9B01A4407SA616EF2726CA43B52",
    "identifier": "number",
    "variableButton": { "dataSource": "numbers" },
    "domainButton": true,
    "type": "GSQStepper",
    "attribute": "number",
    "minimum": 0,
    "maximum": GS.CONST.MAX_NUMBER_VALUE
}

GSQ.CONTROLS.BACKGROUND_LAYER = {
    "label": "$$272673AEKE288A48D0SB8D7EEFF528276A59",
    "identifier": "layer",
    "variableButton": { "dataSource": "numbers" },
    "type": "GSQStepper",
    "attribute": "layer",
    "minimum": 0,
    "maximum": GS.CONST.MAX_NUMBER_VALUE
}

GSQ.CONTROLS.AUDIO_LAYER = {
    "label": "$$272673AEKE288A48D0SB8D7EEFF528276A59",
    "variableButton": { "dataSource": "numbers" },
    "type": "GSQStepper",
    "attribute": "layer",
    "minimum": 0,
    "maximum": GS.CONST.MAX_NUMBER_VALUE
}

GSQ.CONTROLS.TONE = {
    "label": "$$CB75D4C9K770FA47E2S92C2E21822CB848C7",
    "valueFormula": "return p.tone.red + ', ' + p.tone.green + ', ' + p.tone.blue + ', '+p.tone.grey; ",
    "attribute": "tone",
    "type": "GSQPopupField",
    "dataAttribute": "tone",
    "dialog": { "uid": "07DDB01111532274", "parameters": { }}
}

GSQ.CONTROLS.CREATE_COLOR = function(label, attribute, lockable) {
    return {
        "label": label || "$$CE4922C3K0381A4335S898CEFEBA22825F89",
        "valueFormula": `return p.${attribute}.red + ', ' + p.${attribute}.green + ', ' + p.${attribute}.blue + ', '+p.${attribute}.alpha; `,
        "attribute": attribute,
        "type": "GSQPopupField",
        "lockable": lockable,
        "dataAttribute": "color",
        "dialog": { "uid": "07DDB0112342C01F", "parameters": { }}
    }
}

GSQ.CONTROLS.CREATE_LIST_VARIABLE_SELECTION = function(label, attribute) {
    attribute = attribute || "listVariable";
    return {
        "label": label || "$$C9C23A6E5A74F84FE07940677A0C2E37E13D",
        "valueFormula": "return fmtListVar(p."+ attribute + ")",
        "attribute": attribute,
        "identifier": "list",
        "type": "GSQPopupField",
        "dialog": { "uid": "dialog.selectVariable", "parameters": { "dataSource": "lists" }}
    }
}
GSQ.CONTROLS.COLOR = GSQ.CONTROLS.CREATE_COLOR(null, "color", false);

GSQ.CONTROLS.LIST_VARIABLE_SELECTION = {
    "label": "$$C9C23A6E5A74F84FE07940677A0C2E37E13D",
    "valueFormula": "return fmtListVar(p.listVariable)",
    "attribute": "listVariable",
    "identifier": "list",
    "type": "GSQPopupField",
    "dialog": { "uid": "dialog.selectVariable", "parameters": { "dataSource": "lists" }}
}

GSQ.CONTROLS.LIST_VARIABLE_VALUE_TYPE = {
    "label": "$$89ECAECDK4610A4BF8SA019E8444CA45FAB6",
    "valueFormula": "return GS.CONST.LIST_VARIABLE_VALUE_TYPES[p.valueType]",
    "attribute": "valueType",
    "identifier": "valueType",
    "type": "GSQPopupField",
    "dataSource": GS.CONST.LIST_VARIABLE_VALUE_TYPES,
    "showItems": [["numberValue"], ["switchValue"], ["stringValue"], ["listValue"]]
}

GSQ.CONTROLS.LIST_VARIABLE_INDEX = {
    "type": "GSQStepper",
    "label": "$$7C2566611D53564B0A4B8487ECE9DB247FC8",
    "valueFormula": "return fmtNumVar(p.index)",
    "attribute": "index",
    "variableButton": { "dataSource": "numbers" },
    "minimum": 0,
    "maximum": GS.CONST.MAX_NUMBER_VALUE
}

GSQ.CONTROLS.LIST_VARIABLE_VALUES = [
    {
        "label": "",
        "attribute": "numberValue",
        "valueFormula": "return fmtNumVar(p.numberValue)",
        "variableButton": { "dataSource": "numbers" },
        "type": "GSQStepper",
        "minimum": -GS.CONST.MAX_NUMBER_VALUE,
        "maximum": GS.CONST.MAX_NUMBER_VALUE
    },
    {
        "label": "",
        "attribute": "switchValue",
        "valueFormula": "return fmtBoolVar(p.switchValue)",
        "type": "GSQPopupField",
        "dialog": { "uid": "dialog.selectVariable", "parameters": { "dataSource": "booleans" }}
    },
    {
        "label": "",
        "attribute": "stringValue",
        "valueFormula": "return fmtStrVar(p.stringValue)",
        "type": "GSQPopupField",
        "dialog": { "uid": "dialog.selectVariable", "parameters": { "dataSource": "strings" }}
    },
    {
        "label": "",
        "attribute": "listValue",
        "valueFormula": "return fmtListVar(p.listValue)",
        "type": "GSQPopupField",
        "dialog": { "uid": "dialog.selectVariable", "parameters": { "dataSource": "lists" }}
    }
]

GSQ.CONTROLS.LIST_VARIABLE_STORE_IN = [
    {
        "type": "GSQPopupField",
        "identifier": "numberValue",
        "valueFormula": "return fmtNumVar(p.targetVariable)",
        "label": "$$279A870082643340194815582532E3A95B7F",
        "dialog": { "uid": "dialog.selectVariable", "parameters": { "dataSource": "numbers" }},
        "attribute": "targetVariable"
    },
    {
        "type": "GSQPopupField",
        "identifier": "switchValue",
        "valueFormula": "return fmtBoolVar(p.targetVariable)",
        "label": "$$279A870082643340194815582532E3A95B7F",
        "dialog": { "uid": "dialog.selectVariable", "parameters": { "dataSource": "booleans" }},
        "attribute": "targetVariable"
    },
    {
        "type": "GSQPopupField",
        "identifier": "stringValue",
        "valueFormula": "return fmtStrVar(p.targetVariable)",
        "label": "$$279A870082643340194815582532E3A95B7F",
        "dialog": { "uid": "dialog.selectVariable", "parameters": { "dataSource": "strings" }},
        "attribute": "targetVariable"
    },
    {
        "type": "GSQPopupField",
        "identifier": "listValue",
        "valueFormula": "return fmtListVar(p.targetVariable)",
        "label": "$$279A870082643340194815582532E3A95B7F",
        "dialog": { "uid": "dialog.selectVariable", "parameters": { "dataSource": "lists" }},
        "attribute": "targetVariable"
    }
]
GSQ.CONTROLS.LIST_VARIABLE_VALUE_SELECTION = [
    GSQ.CONTROLS.LIST_VARIABLE_VALUE_TYPE
].concat(GSQ.CONTROLS.LIST_VARIABLE_VALUES)

GSQ.CONTROLS.GRAPHIC_EFFECTS = [
    {
        "type": "GSQPopupField",
        "label": "$$BD058CE5KA3B8A41C6S9B32ECEC674F8EC05",
        "dataSource": GS.CONST.GRAPHIC_EFFECTS,
        "valueFormula": "return GS.CONST.GRAPHIC_EFFECTS[p.type]",
        "attribute": "type",
        "showItems": [
            ["wobble.power", "wobble.speed", "wobble.orientation"], 
            ["blur.power"],
            ["pixelate.size.width", "pixelate.size.height"]
        ]
    },
    {
        "type": "GSQStepper",
        "label": "$$130D916E55CD9841721804F4B47B6D8C3A5E",
        "minimum": 0,
        "maximum": 1000,
        "identifier": "blur.power",
        "attribute": "blur.power"
    },
    {
        "type": "GSQStepper",
        "label": "$$F298E912KB3FAA4D38S8699ED37655BCFEF0",
        "minimum": 0,
        "maximum": GS.CONST.MAX_NUMBER_VALUE,
        "identifier": "pixelate.size.width",
        "attribute": "pixelate.size.width"
    },
    {
        "type": "GSQStepper",
        "label": "$$6AD32F89KCC0CA4C25S8900E0FA08CE71324",
        "minimum": 0,
        "maximum": GS.CONST.MAX_NUMBER_VALUE,
        "identifier": "pixelate.size.height",
        "attribute": "pixelate.size.height"
    },
    {
        "type": "GSQStepper",
        "label": "$$130D916E55CD9841721804F4B47B6D8C3A5E",
        "minimum": 0,
        "maximum": 100,
        "identifier": "wobble.power",
        "attribute": "wobble.power"
    },
    {
        "type": "GSQStepper",
        "label": "$$D61D429627E27449B86881C3DE0446316091",
        "minimum": 0,
        "maximum": 100,
        "attribute": "wobble.speed",
        "identifier": "wobble.speed"
    },
    {
        "type": "GSQPopupField",
        "label": "$$D134DB1755C3394F602AAC137CA7CA1766DF",
        "dataSource": GS.CONST.ORIENTATION_BOTH,
        "valueFormula": "return GS.CONST.ORIENTATION_BOTH[p.wobble.orientation]",
        "attribute": "wobble.orientation",
        "identifier": "wobble.orientation"
    }
]

GSQ.CONTROLS.SCREEN_GRAPHIC_EFFECTS = [
    {
        "type": "GSQPopupField",
        "label": "$$BD058CE5KA3B8A41C6S9B32ECEC674F8EC05",
        "dataSource": GS.CONST.GRAPHIC_EFFECTS,
        "valueFormula": "return GS.CONST.GRAPHIC_EFFECTS[p.type]",
        "attribute": "type",
        "showItems": [
            ["wobble.power", "wobble.speed", "wobble.orientation"], 
            ["blur.power"],
            ["pixelate.size.height", "pixelate.size.width"]
        ]
    },
    {
        "type": "GSQStepper",
        "label": "$$130D916E55CD9841721804F4B47B6D8C3A5E",
        "minimum": 0,
        "maximum": 1000,
        "identifier": "blur.power",
        "attribute": "blur.power"
    },
    {
        "type": "GSQStepper",
        "label": "$$F298E912KB3FAA4D38S8699ED37655BCFEF0",
        "minimum": 0,
        "maximum": GS.CONST.MAX_NUMBER_VALUE,
        "identifier": "pixelate.size.width",
        "attribute": "pixelate.size.width"
    },
    {
        "type": "GSQStepper",
        "label": "$$6AD32F89KCC0CA4C25S8900E0FA08CE71324",
        "minimum": 0,
        "maximum": GS.CONST.MAX_NUMBER_VALUE,
        "identifier": "pixelate.size.height",
        "attribute": "pixelate.size.height"
    },
    {
        "type": "GSQStepper",
        "label": "$$130D916E55CD9841721804F4B47B6D8C3A5E",
        "minimum": 0,
        "maximum": 100,
        "identifier": "wobble.power",
        "attribute": "wobble.power"
    },
    {
        "type": "GSQStepper",
        "label": "$$D61D429627E27449B86881C3DE0446316091",
        "minimum": 0,
        "maximum": 100,
        "attribute": "wobble.speed",
        "identifier": "wobble.speed"
    },
    {
        "type": "GSQPopupField",
        "label": "$$D134DB1755C3394F602AAC137CA7CA1766DF",
        "dataSource": GS.CONST.ORIENTATION_BOTH,
        "valueFormula": "return GS.CONST.ORIENTATION_BOTH[p.wobble.orientation]",
        "attribute": "wobble.orientation",
        "identifier": "wobble.orientation"
    },
    GSQ.CONTROLS.DURATION,
    GSQ.CONTROLS.WAIT_FOR_COMPLETION
]

GSQ.CONTROLS.SHAKING = [
    {
        "label": "$$2AA1FF5A1F93584F8F585F9663B9498D3026",
        "type": "GSQStepper",
        "attribute": "range.x",
        "variableButton": { "dataSource": "numbers" },
        "defaultValue": 0,
        "minimum": -GS.CONST.MAX_NUMBER_VALUE,
        "maximum": GS.CONST.MAX_NUMBER_VALUE
    },
    {
        "label": "$$4CCA364F5644674BFA1AC0E973871C292D40",
        "type": "GSQStepper",
        "attribute": "range.y",
        "variableButton": { "dataSource": "numbers" },
        "defaultValue": 0,
        "minimum": -GS.CONST.MAX_NUMBER_VALUE,
        "maximum": GS.CONST.MAX_NUMBER_VALUE
    },
    {
        "label": "$$D61D429627E27449B86881C3DE0446316091",
        "valueFormula": "return p.speed",
        "type": "GSQStepper",
        "attribute": "speed",
        "variableButton": { "dataSource": "numbers" },
        "minimum": -GS.CONST.MAX_NUMBER_VALUE,
        "maximum": GS.CONST.MAX_NUMBER_VALUE
    }
]

GSQ.CONTROLS.TIMING = [
    GSQ.CONTROLS.DURATION,
    GSQ.CONTROLS.WAIT_FOR_COMPLETION
]
GSQ.CONTROLS.MASKING = [
    {
        "type": "GSQPopupField",
        "attribute": "mask.sourceType",
        "label": "$$P61",
        "dataSource": GS.CONST.MASKING_FILE_TYPES,
        "valueFormula": "return GS.CONST.MASKING_FILE_TYPES[p.mask.sourceType]",
        "showItems": [["maskGraphicFile"], ["maskVideoFile"]]
    },
    {
        "label": "",
        "valueFormula": "return fmtResource(p.mask.video);",
        "attribute": "mask.video",
        "identifier": "maskVideoFile",
        "variableButton": { "dataSource": "strings" },
        "type": "GSQPopupField",
        "dialog": { "uid": "dialog.selectVideoResource", "parameters": { "folder": "Movies" }}
    },
    {
        "label": "",
        "valueFormula": "return fmtResource(p.mask.graphic);",
        "variableButton": { "dataSource": "strings" },
        "attribute": "mask.graphic",
        "identifier": "maskGraphicFile",
        "type": "GSQPopupField",
        "dataAttribute": "resource",
        "dialog": { "uid": "dialog.selectGraphicResource", "parameters": { "folder": "Graphics/Masks" }}
    },
    {
        "type": "GSQPopupField",
        "attribute": "mask.type",
        "label": "$$BD058CE5KA3B8A41C6S9B32ECEC674F8EC05",
        "dataSource": GS.CONST.MASKING_TYPES,
        "valueFormula": "return GS.CONST.MASKING_TYPES[p.mask.type]",
        "showItems": [["maskOffsetX", "maskOffsetY"], ["maskValue", "maskVague", "duration", "waitForCompletion"]]
    },
    {
        "label": "$$68FB7C8F2A39144FAB3AC4D08FC63E65BEED",
        "type": "GSQStepper",
        "identifier": "maskOffsetX",
        "variableButton": { "dataSource": "numbers" },
        "attribute": "mask.ox",
        "minimum": 0,
        "maximum": GS.CONST.MAX_NUMBER_VALUE
    },
    {
        "label": "$$1649C7C95814084C5A89FF92313C8C60021D",
        "type": "GSQStepper",
        "identifier": "maskOffsetY",
        "variableButton": { "dataSource": "numbers" },
        "attribute": "mask.oy",
        "minimum": 0,
        "maximum": GS.CONST.MAX_NUMBER_VALUE
    },
    {
        "label": "$$89ECAECDK4610A4BF8SA019E8444CA45FAB6",
        "type": "GSQStepper",
        "identifier": "maskValue",
        "attribute": "mask.value",
        "variableButton": { "dataSource": "numbers" },
        "minimum": 0,
        "maximum": 255
    },
    {
        "label": "$$A20F74E20798454C200A83253DEACB863B87",
        "type": "GSQStepper",
        "identifier": "maskVague",
        "attribute": "mask.vague",
        "variableButton": { "dataSource": "numbers" },
        "minimum": 0,
        "maximum": 255
    }
]

GSQ.CONTROLS.CREATE_MOTION_BLUR = function(attribute, lockable)
{
    return [
        {
            "label": "$$39F3501D5398B243109AC4E68EA163812B38",
            "lockable": lockable,
            "type": "GSQCheckBox",
            "attribute": attribute+".enabled",
            "valueFormula": "return GS.CONST.YES_NO[p."+attribute+".enabled]",
            "enableItems": [attribute + ".delay", attribute + ".dissolveSpeed", attribute + ".opacity"]
        },
        {
            "label": "$$4DAD1BF70B09254B8C7898E012FD7FAF15CC",
            "type": "GSQStepper",
            "attribute": attribute + ".delay",
            "minimum": 1,
            "maximum": 1000
        },
        {
            "label": "$$BE21611B4A0B334CE4092F34651F62808466",
            "type": "GSQStepper",
            "attribute": attribute + ".dissolveSpeed",
            "minimum": 1,
            "maximum": 255
        },
        {
            "label": "$$P176",
            "type": "GSQStepper",
            "attribute": attribute + ".opacity",
            "minimum": 1,
            "maximum": 255
        }
    ]
}
GSQ.CONTROLS.MOTION_BLUR = GSQ.CONTROLS.CREATE_MOTION_BLUR("motionBlur", true)

GSQ.ROWS.SIMPLE_ANIMATION = {
    "items": [
        {
            "label": "$$9D7B8871KE8A7A410ES8CA3EA1F415A8BEA7",
            "type": "GSQDataRecordField",
            "attribute": "animationId",
            "dataSource": "animations",
            "allowEmptySelection": true,
            "valueFormula": "return fmtRecord('animations', p.animationId)"
        }
    ]
};

GSQ.ROWS.CREATE_EASING = function(label, attribute, lockable){
    return {
        "items": [
            {
                "label": label,
                "type": "GSQPopupField",
                "attribute": attribute+".type",
                "lockable": lockable,
                "width": "50%",
                "dataSource": GS.CONST.EASING_TYPES,
                "valueFormula": "return GS.CONST.EASING_TYPES[p." + attribute + ".type]"
            },
            {
                "label": "",
                "width": "auto",
                "unlockItems": [attribute+".type"],
                "type": "GSQPopupField",
                "attribute": attribute + ".inOut",
                "dataSource": GS.CONST.EASING_IN_OUT,
                "valueFormula": "return GS.CONST.EASING_IN_OUT[p." + attribute + ".inOut]"
            }
        ]
    };
}

GSQ.ROWS.CREATE_ACTION_SELECTION = function(label, attribute)
{
    return {
        "items": [
            {
                "type": "GSQPopupField",
                "label": label,
                "attribute": attribute + ".type",
                "dataSource": GS.CONST.HOTSPOT_ACTION_TYPES,
                "valueFormula": "return GS.CONST.HOTSPOT_ACTION_TYPES[p." +attribute+".type]",
                "showItems": [[attribute + ".label"], [attribute + ".commonEventId"], [attribute + ".switch"], [attribute + ".scene"],  [attribute + ".bindValue", attribute + ".bindValueVariable", attribute + ".bindValueLabel"]],
                "width": "50%"
            },
            {
                "type": "GSQDataRecordField",
                "label": "$$512615ADK2682A417AS9B11EF5FDFE78FD82",
                "valueFormula": "return fmtRecord('commonEvents', p." +attribute+".commonEventId)",
                "attribute": attribute + ".commonEventId",
                "dataSource": "commonEvents",
                "width": "50%"
            },
            {
                "type": "GSQTextArea",
                "multiline": false,
                "attribute": attribute + ".label",
                "valueFormula": "return p." + attribute + ".label || lcs('D7DC911DKCCB9A4DE9SBE26EBFCCA4CB0826')",
                "label": "$$DE90FBDDKDCE8A4CAASA1C1E982F7D417C1C",
                "width": "50%"
            },
            {
                "label": "$$A8B1ECD7K09BAA4FFESB501EEF84B2699ED9",
                "type": "GSQPopupField",
                "attribute": attribute + ".switch",
                "dialog": { "uid":"dialog.selectVariable", "parameters": { "dataSource": "booleans" } },
                "valueFormula": "return fmtBoolVar(p." + attribute + ".switch)",
                "width": "50%"
            },
            {
                "type": "GSQPopupField",
                "label": "",
                "attribute": attribute + ".scene",
                "dataAttribute": "scene",
                "dialog": { "uid": "0E620E08KED4CA4E7CS8514E5B2BF2657DA5" },
                "valueFormula": "return isVar(p." + attribute + ".scene) ? fmtStrVar(p." + attribute + ".scene) : (p." + attribute + ".scene ? fmtDocument(p." + attribute + ".scene.uid) : lcs('D7DC911DKCCB9A4DE9SBE26EBFCCA4CB0826'));"
            },
            {
                "label": "",
                "type": "GSQStepper",
                "attribute": attribute + ".bindValue",
                "variableButton": { "dataSource": "numbers"},
                "valueFormula": "return fmtNumVar(p." + attribute + ".bindValue)"
            },
            {
                "label": "$$DC1A41265CECC346098B4931B5874A2AF62A",
                "type": "GSQPopupField",
                "attribute": attribute + ".bindValueVariable",
                "dialog": { "uid":"dialog.selectVariable", "parameters": { "dataSource": "numbers" } },
                "valueFormula": "return fmtNumVar(p." + attribute + ".bindValueVariable)"
            },
            {
                "type": "GSQTextArea",
                "multiline": false,
                "identifier": attribute + ".bindValueLabel",
                "attribute": attribute + ".label",
                "valueFormula": "return p." + attribute + ".label || lcs('D7DC911DKCCB9A4DE9SBE26EBFCCA4CB0826')",
                "label": "$$2D17A8195E24F34F438812609C2EB18B90D3"
            }
        ]
    }
}

GSQ.ROWS.VIEWPORT = { "items": [
        {
            "type": "GSQPopupField",
            "label": "$$799D25F96B14034F6D393B75F6A724949693",
            "valueFormula": 'return GS.CONST.VIEWPORT_TYPES[p.viewport.type].name',
            "dataSource": Object.values(GS.CONST.VIEWPORT_TYPES),
            "attribute": "viewport.type",
            "lockable": true
        }
    ]
};

GSQ.ROWS.VIEWPORT_INFLUENCE = { "items": [
        {
            "type": "GSQPopupField",
            "label": "Viewport Influence",
            "valueFormula": 'return GS.CONST.VIEWPORT_INFLUENCE_TYPES[p.viewport.influenceType].name',
            "dataSource": Object.values(GS.CONST.VIEWPORT_INFLUENCE_TYPES),
            "attribute": "viewport.influenceType",
            "lockable": true,
            "showItems": [[], [], ["viewport.influence"]]
        },
        {
            "type": "GSQStepper",
            "label": "Influence",
            "valueFormula": "return p.viewport.influence + '%'",
            "attribute": "viewport.influence",
            "lockable": true
        }
    ]
};

GSQ.ROWS.EASING = GSQ.ROWS.CREATE_EASING("$$858E29BD598E6544DD49356017DFC223DA6F", "easing", true)

GSQ.ROWS.CREATE_CHANGE_ANIMATION = function(label, attribute, lockable)
{
    return {
        "items": [
            {
                "type": "GSQPopupField",
                "attribute": attribute+".type",
                "width": "50%",
                "lockable": true,
                "label": label,
                "dataSource": GS.CONST.APPEARANCE_ANIMATION_TYPES,
                "valueFormula": "return GS.CONST.APPEARANCE_ANIMATION_TYPES[p." + attribute +".type]",
                "showItems": [[attribute+"_movement"], [], [attribute+"_maskFile", attribute+"_maskVague"]]
            },
            {
                "identifier": attribute +"_movement",
                "dataSource": GS.CONST.MOVE_ANIMATION_TYPES,
                "type": "GSQPopupField",
                "width": "auto",
                "unlockItems": [attribute+".type"],
                "attribute": attribute + ".movement",
                "valueFormula": "return GS.CONST.MOVE_ANIMATION_TYPES[p."+attribute+ ".movement]"
            },
            {
                "label": "$$P61",
                "valueFormula": "return fmtResource(p."+attribute+".mask.graphic);",
                "attribute": attribute+".mask.graphic",
                "variableButton": { "dataSource": "strings" },
                "identifier": attribute+"_maskFile",
                "type": "GSQPopupField",
                "unlockItems": [attribute+".type"],
                "dataAttribute": "resource",
                "dialog": { "uid": "dialog.selectGraphicResource", "parameters": { "folder": "Graphics/Masks" }}
            },
            {
                "label": "$$A20F74E20798454C200A83253DEACB863B87",
                "identifier": attribute+"_maskVague",
                "variableButton": { "dataSource": "numbers" },
                "type": "GSQStepper",
                "unlockItems": [attribute+".type"],
                "attribute": attribute+".mask.vague",
                "minimum": 0,
                "maximum": 255
            },
            {
                "identifier": attribute +"_fading",
                "dataSource": GS.CONST.ANIMATION_FADING_TYPES,
                "type": "GSQPopupField",
                "unlockItems": [attribute+".type"],
                "width": "auto",
                "attribute": attribute + ".fading",
                "valueFormula": "return GS.CONST.ANIMATION_FADING_TYPES[p."+attribute+ ".fading]"
            }
        ]
    }
}

GSQ.ROWS.CREATE_APPEARANCE_ANIMATION = function(label, attribute, lockable)
{
    return {
        "items": [
            {
                "type": "GSQPopupField",
                "attribute": attribute+".type",
                "width": "50%",
                "lockable": true,
                "label": label,
                "dataSource": GS.CONST.APPEARANCE_ANIMATION_TYPES,
                "valueFormula": "return GS.CONST.APPEARANCE_ANIMATION_TYPES[p." + attribute +".type]",
                "showItems": [[attribute+"_movement"], [], [attribute+"_maskFile", attribute+"_maskVague"]]
            },
            {
                "identifier": attribute +"_movement",
                "dataSource": GS.CONST.MOVE_ANIMATION_TYPES,
                "type": "GSQPopupField",
                "width": "auto",
                "unlockItems": [attribute+".type"],
                "attribute": attribute + ".movement",
                "valueFormula": "return GS.CONST.MOVE_ANIMATION_TYPES[p."+attribute+ ".movement]"
            },
            {
                "label": "$$P61",
                "valueFormula": "return fmtResource(p."+attribute+".mask.graphic);",
                "attribute": attribute+".mask.graphic",
                "variableButton": { "dataSource": "strings" },
                "identifier": attribute+"_maskFile",
                "unlockItems": [attribute+".type"],
                "type": "GSQPopupField",
                "dataAttribute": "resource",
                "dialog": { "uid": "dialog.selectGraphicResource", "parameters": { "folder": "Graphics/Masks" }}
            },
            {
                "label": "$$A20F74E20798454C200A83253DEACB863B87",
                "identifier": attribute+"_maskVague",
                "variableButton": { "dataSource": "numbers" },
                "unlockItems": [attribute+".type"],
                "type": "GSQStepper",
                "attribute": attribute+".mask.vague",
                "minimum": 0,
                "maximum": 255
            }
        ]
    }
}

GSQ.ROWS.CHANGE_ANIMATION = GSQ.ROWS.CREATE_CHANGE_ANIMATION("$$9D7B8871KE8A7A410ES8CA3EA1F415A8BEA7", "animation", true)
GSQ.ROWS.APPEARANCE_ANIMATION = GSQ.ROWS.CREATE_APPEARANCE_ANIMATION("$$9D7B8871KE8A7A410ES8CA3EA1F415A8BEA7", "animation", true)

GSQ.ROWS.MOTION_BLUR = {
    "items": GSQ.CONTROLS.MOTION_BLUR
};

"
    },
    "summary": [
        "name",
        "type",
        "order"
    ],
    "externalItems": []
}