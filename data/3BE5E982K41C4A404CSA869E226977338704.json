{
    "uid": "3BE5E982K41C4A404CSA869E226977338704",
    "isLoaded": true,
    "lastModificationTime": 1421095529042,
    "items": {
        "name": "LanguageManager",
        "type": "game_script",
        "order": 3,
        "parentId": "C0268943K60B3A42B7SA6F1EDDCF2F642FD7",
        "content": "# ===================================================================\n#\n#   Script: LanguageManager\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\nclass LanguageManager\n    ###*\n    * Manages the different languages of the game.  \n    *\n    * @module gs\n    * @class LanguageManager\n    * @memberof gs\n    * @constructor\n    ###\n    constructor: ->\n        ###*\n        * The default language profile.\n        * @property defaultProfile\n        * @type gs.LanguageProfile\n        ### \n        @defaultProfile = null\n        \n        ###*\n        * The current language profile.\n        * @property profile\n        * @type gs.LanguageProfile\n        ### \n        @profile = null\n        \n        ###*\n        * The current strings bundle.\n        * @property bundle\n        * @type gs.LanguageStringsBundle\n        ### \n        @bundle = null\n        \n        ###*\n        * The default strings bundle.\n        * @property defaultBundle\n        * @type gs.LanguageStringsBundle\n        ### \n        @defaultBundle = null\n        \n    ###*\n    * Initializes the language system by loading the necessary language profiles\n    * and strings bundles.\n    *\n    * @method initialize\n    ###\n    initialize: ->\n        @languages = []\n        DataManager.getDocumentByType(\"custom_strings_bundle\")\n        documents = DataManager.getDocumentsByType(\"language_profile\")\n        \n        for document in documents\n            @languages.push({ name: document.items.name, code: document.items.code, uid: document.uid, icon: document.items.icon, bundleUid: document.items.bundleUid, wordWrap: document.items.wordWrap ? \"spaceBased\" })\n            if document.uid == \"07DDA0716161F104\" # Default Profile\n                @language = @languages[@languages.length-1]\n                @defaultLanguage = @language\n           \n        @selectLanguage(@language)     \n        if @language.uid != @defaultLanguage.uid\n            @defaultProfile = DataManager.getDocument(@defaultLanguage.uid)\n        else\n            @defaultProfile = @profile\n    \n    ###*\n    * Loads the necessary strings bundles for the current language. \n    *\n    * @method loadBundles\n    ###        \n    loadBundles: ->\n        customStrings = DataManager.getDocumentByType(\"custom_strings_bundle\")\n        if @language.uid != @defaultLanguage.uid\n            @bundle = DataManager.getDocument(@language.bundleUid)\n\n              \n        @defaultBundle = { items: { localizableStrings: {} } }\n        \n        Object.mixin(@defaultBundle.items.localizableStrings, customStrings.items.localizableStrings)\n        \n        return @language.uid != @defaultLanguage.uid\n    \n    ###*\n    * Sets the specified language as current language.\n    *\n    * @method selectLanguage\n    * @param {Object} language - The language to set.\n    ###      \n    selectLanguage: (language) ->\n        @language = language\n        @profile = DataManager.getDocument(@language.uid)\n        \n    ###*\n    * Gets the string for the specified id. If the string doesn't exist for current\n    * language, its taken from the default language.\n    *\n    * @method string\n    * @param {String} id - The ID of the string to get.\n    * @return {String} The string for the specified ID. If the string could not be found the result\n    * is an empty string.\n    ###     \n    string: (id) -> \n        result = null\n\n        if @bundle? and @bundle.items?\n            result = @bundle.items.localizableStrings[id]\n            if result?.t?\n                result = result.t\n\n        if not result? or result.length == 0\n            result = @stringFromDefault(id)\n            \n        return result\n    \n    ###*\n    * Gets the string for the specified id in default language.\n    *\n    * @method stringFromDefault\n    * @param {String} id - The ID of the string to get.\n    * @return {String} The string for the specified ID. If the string could not be found the result\n    * is an empty string.\n    ###      \n    stringFromDefault: (id) ->\n        result = null\n        \n        if @defaultBundle? and @defaultBundle.items?\n            result = @defaultBundle.items.localizableStrings[id]?.t\n            \n        return result\n \nwindow.LanguageManager = new LanguageManager()\ngs.LanguageManager = LanguageManager\n\nwindow.lcsi = (id) -> if id? then window.LanguageManager.string(id) || \"\" else \"\"\nwindow.lcs = (value) -> return if (value? and (value.lcId? or value.defaultText?)) then window.LanguageManager.string(value.lcId) || value?.defaultText?.t || value?.defaultText else value\nwindow.lcsm = (value) -> return lcs(value) #return if value.lcId? then window.LanguageManager.stringFromBundle(value.lcId, window.LanguageManager.mapBundle) || value.defaultText else value\n",
        "compiledContent": "var LanguageManager;\n\nLanguageManager = (function() {\n\n  /**\n  * Manages the different languages of the game.  \n  *\n  * @module gs\n  * @class LanguageManager\n  * @memberof gs\n  * @constructor\n   */\n  function LanguageManager() {\n\n    /**\n    * The default language profile.\n    * @property defaultProfile\n    * @type gs.LanguageProfile\n     */\n    this.defaultProfile = null;\n\n    /**\n    * The current language profile.\n    * @property profile\n    * @type gs.LanguageProfile\n     */\n    this.profile = null;\n\n    /**\n    * The current strings bundle.\n    * @property bundle\n    * @type gs.LanguageStringsBundle\n     */\n    this.bundle = null;\n\n    /**\n    * The default strings bundle.\n    * @property defaultBundle\n    * @type gs.LanguageStringsBundle\n     */\n    this.defaultBundle = null;\n  }\n\n\n  /**\n  * Initializes the language system by loading the necessary language profiles\n  * and strings bundles.\n  *\n  * @method initialize\n   */\n\n  LanguageManager.prototype.initialize = function() {\n    var document, documents, i, len, ref;\n    this.languages = [];\n    DataManager.getDocumentByType(\"custom_strings_bundle\");\n    documents = DataManager.getDocumentsByType(\"language_profile\");\n    for (i = 0, len = documents.length; i < len; i++) {\n      document = documents[i];\n      this.languages.push({\n        name: document.items.name,\n        code: document.items.code,\n        uid: document.uid,\n        icon: document.items.icon,\n        bundleUid: document.items.bundleUid,\n        wordWrap: (ref = document.items.wordWrap) != null ? ref : \"spaceBased\"\n      });\n      if (document.uid === \"07DDA0716161F104\") {\n        this.language = this.languages[this.languages.length - 1];\n        this.defaultLanguage = this.language;\n      }\n    }\n    this.selectLanguage(this.language);\n    if (this.language.uid !== this.defaultLanguage.uid) {\n      return this.defaultProfile = DataManager.getDocument(this.defaultLanguage.uid);\n    } else {\n      return this.defaultProfile = this.profile;\n    }\n  };\n\n\n  /**\n  * Loads the necessary strings bundles for the current language. \n  *\n  * @method loadBundles\n   */\n\n  LanguageManager.prototype.loadBundles = function() {\n    var customStrings;\n    customStrings = DataManager.getDocumentByType(\"custom_strings_bundle\");\n    if (this.language.uid !== this.defaultLanguage.uid) {\n      this.bundle = DataManager.getDocument(this.language.bundleUid);\n    }\n    this.defaultBundle = {\n      items: {\n        localizableStrings: {}\n      }\n    };\n    Object.mixin(this.defaultBundle.items.localizableStrings, customStrings.items.localizableStrings);\n    return this.language.uid !== this.defaultLanguage.uid;\n  };\n\n\n  /**\n  * Sets the specified language as current language.\n  *\n  * @method selectLanguage\n  * @param {Object} language - The language to set.\n   */\n\n  LanguageManager.prototype.selectLanguage = function(language) {\n    this.language = language;\n    return this.profile = DataManager.getDocument(this.language.uid);\n  };\n\n\n  /**\n  * Gets the string for the specified id. If the string doesn't exist for current\n  * language, its taken from the default language.\n  *\n  * @method string\n  * @param {String} id - The ID of the string to get.\n  * @return {String} The string for the specified ID. If the string could not be found the result\n  * is an empty string.\n   */\n\n  LanguageManager.prototype.string = function(id) {\n    var result;\n    result = null;\n    if ((this.bundle != null) && (this.bundle.items != null)) {\n      result = this.bundle.items.localizableStrings[id];\n      if ((result != null ? result.t : void 0) != null) {\n        result = result.t;\n      }\n    }\n    if ((result == null) || result.length === 0) {\n      result = this.stringFromDefault(id);\n    }\n    return result;\n  };\n\n\n  /**\n  * Gets the string for the specified id in default language.\n  *\n  * @method stringFromDefault\n  * @param {String} id - The ID of the string to get.\n  * @return {String} The string for the specified ID. If the string could not be found the result\n  * is an empty string.\n   */\n\n  LanguageManager.prototype.stringFromDefault = function(id) {\n    var ref, result;\n    result = null;\n    if ((this.defaultBundle != null) && (this.defaultBundle.items != null)) {\n      result = (ref = this.defaultBundle.items.localizableStrings[id]) != null ? ref.t : void 0;\n    }\n    return result;\n  };\n\n  return LanguageManager;\n\n})();\n\nwindow.LanguageManager = new LanguageManager();\n\ngs.LanguageManager = LanguageManager;\n\nwindow.lcsi = function(id) {\n  if (id != null) {\n    return window.LanguageManager.string(id) || \"\";\n  } else {\n    return \"\";\n  }\n};\n\nwindow.lcs = function(value) {\n  var ref;\n  if ((value != null) && ((value.lcId != null) || (value.defaultText != null))) {\n    return window.LanguageManager.string(value.lcId) || (value != null ? (ref = value.defaultText) != null ? ref.t : void 0 : void 0) || (value != null ? value.defaultText : void 0);\n  } else {\n    return value;\n  }\n};\n\nwindow.lcsm = function(value) {\n  return lcs(value);\n};\n\n//# sourceMappingURL=data:application/json;base64,\n//# sourceURL=LanguageManager_55.js"
    },
    "summary": [
        "name",
        "type",
        "order"
    ],
    "externalItems": []
}